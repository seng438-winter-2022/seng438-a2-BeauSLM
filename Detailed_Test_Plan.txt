Through reading the requirements for each of the chosen methods to be tested, 
we have decided upon each method being tested based on black box testing. First, 
equivalence classes will be determined for each domain, most often this will simply include
partitioning values into legal and illegal tests. Next we will use boundary values for 
the return values, this often results in the maximum and minimum values for the data 
types that are returned by each method. Following the two max. and min. tests, a test 
will be conducted to prove that the method is presumably functional for any values between 
the minimum and maximum. If a value is specified to be the maximum number available, 
ie. a boundary, there will be additional robustness testing outside of the boundary 
to ensure the boundaries are held. For many of these tests, there will be very few illegal
test values, considering the broad spectrum of values that methods can receive.

Methods that contain paramter inputs, for example the method 
calculateColumnTotal(Values2D data, int column), will require extra tests that ensure the 
inputs are congruent with each other and if a parameter is out of bounds the application will 
not continue to calculate results. 